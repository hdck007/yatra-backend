// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

// globalfeed -> array of recent events 
// (tags, destination, query, orderby ratings, filter by ratings)
// start log --> logid ✅
// end log --> logid ✅
// event post api --> createdAt, updatedAt, logid, content --> (title, text, image)
// User --> multiple logs
// get logs start_date= and end_date=

model User {
  id        String @id @default(uuid())
  firstName String
  lastName  String
  password  String
  username  String
  logs      Log[]
}

model Log {
  id        String    @id @default(uuid())
  place     String
  startDate DateTime
  endDate   DateTime?
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  events    Event[]
}

model Event {
  id      String   @id @default(uuid())
  title   String   @db.VarChar(255)
  rating  Int      @default(0)
  content String
  log     Log      @relation(fields: [logId], references: [id])
  logId   String
  ratings Rating[]
  tags    Tag[]
}

model Rating {
  id        String   @id @default(uuid())
  ratings   Float
  createdBy String   @db.LongText
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  event     Event    @relation(fields: [eventId], references: [id])
  eventId   String
}

model Tag {
  id     String  @id @default(uuid())
  name   String  @unique
  events Event[]
}
